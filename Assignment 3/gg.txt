<UuApp.DesignKit.Algorithm data="<uu5json/>{
  \"schemaVersion\": \"1.0.0\",
  \"automaticGenerateErrorList\": true,
  \"id\": \"d2a4bf5fceec74284b6ba64ef2d05d9a\",
  \"statementList\": [
    {
      \"name\": \"Input data\",
      \"desc\": \"dtoIn\",
      \"conditional\": false,
      \"condition\": \"\",
      \"id\": \"28984a4e8a4074b4ba963bc21d52c567\",
      \"comment\": \"\",
      \"type\": \"step\",
      \"label\": \"1.\"
    },
    {
      \"statementList\": [
        {
          \"name\": \"\",
          \"desc\": \"\",
          \"type\": \"if\",
          \"id\": \"d50b26c65fff44b568b57faae6b72975\",
          \"label\": \"2.A.\",
          \"condition\": \"<uu5string />dtoIn.count &lt; 0\",
          \"statementList\": [
            {
              \"message\": \"\",
              \"params\": \"\",
              \"code\": \"Wrong Input Count!\",
              \"exception\": false,
              \"apiError\": true,
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"c979634eb2c2d458983c4d45536a31ab\",
              \"name\": \"\",
              \"desc\": \"<uu5string /><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"color\\\\\\\":\\\\\\\"#6a9955\\\\\\\"}\\\">if count is less than 0 (generate negative employees)</UU5.Bricks.Span>\",
              \"comment\": \"\",
              \"type\": \"error\",
              \"label\": \"2.A.1.\"
            }
          ]
        },
        {
          \"condition\": \"<uu5string />dtoIn.age.min &lt;=0\",
          \"id\": \"3e1932eab420b45c99ac01312098d749\",
          \"name\": \"\",
          \"desc\": \"<uu5string /><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"color\\\\\\\":\\\\\\\"#6a9955\\\\\\\"}\\\">if age is less or equal than 0 (not born yet)</UU5.Bricks.Span>\",
          \"comment\": \"\",
          \"type\": \"elseIf\",
          \"label\": \"2.B.\",
          \"statementList\": [
            {
              \"message\": \"\",
              \"params\": \"\",
              \"code\": \"Wrong Input Minimum Age!\",
              \"exception\": false,
              \"apiError\": true,
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"90f476dda69044af38a0a8c5fe1bafc9\",
              \"name\": \"\",
              \"desc\": \"\",
              \"comment\": \"\",
              \"type\": \"error\",
              \"label\": \"2.B.1.\"
            }
          ]
        },
        {
          \"condition\": \"dtoIn.age.max > 150\",
          \"id\": \"49bdd451dac2e4f2c9a57cf1506ed8f1\",
          \"name\": \"\",
          \"desc\": \"<uu5string /><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"color\\\\\\\":\\\\\\\"#6a9955\\\\\\\"}\\\">if age is less than 150 (high probability of being dead)</UU5.Bricks.Span>\",
          \"comment\": \"\",
          \"type\": \"elseIf\",
          \"label\": \"2.C.\",
          \"statementList\": [
            {
              \"message\": \"\",
              \"params\": \"\",
              \"code\": \"Wrong Input Maximum Age!\",
              \"exception\": false,
              \"apiError\": true,
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"e2ff21014c18f41aca33214bf5623189\",
              \"name\": \"\",
              \"desc\": \"\",
              \"comment\": \"\",
              \"type\": \"error\",
              \"label\": \"2.C.1.\"
            }
          ]
        }
      ],
      \"id\": \"ce9a9e51d9e394c50ac83bb3921ded38\",
      \"name\": \"\",
      \"desc\": \"\",
      \"comment\": \"\",
      \"type\": \"selectionIf\",
      \"label\": \"2.\"
    },
    {
      \"conditional\": false,
      \"condition\": \"\",
      \"id\": \"9ac46e848b7e0454799352c26a16dabd\",
      \"name\": \"maleNames, femaleNames, maleSurnames, femaleSurnames\",
      \"desc\": \"4 arrays of male and female names and surnames\",
      \"comment\": \"\",
      \"type\": \"step\",
      \"label\": \"3.\"
    },
    {
      \"conditional\": false,
      \"condition\": \"\",
      \"id\": \"7e7a6c6ef92c44fc2956b9faa875f2ae\",
      \"name\": \"function getRandom(min, max)\",
      \"desc\": \"<uu5string /><UU5.Bricks.Div>user inputs min, max value and gets back a random value in range.</UU5.Bricks.Div><UU5.Bricks.Div><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">return Math.floor(Math.random() * (max - min) ) +min;</UU5.Bricks.Span></UU5.Bricks.Div>\",
      \"comment\": \"\",
      \"type\": \"step\",
      \"label\": \"4.\"
    },
    {
      \"conditional\": false,
      \"condition\": \"\",
      \"id\": \"9f9faca8e3f194ca197eddbf5d464235\",
      \"name\": \"function whatGender()\",
      \"desc\": \"outputs male or female gender\",
      \"comment\": \"\",
      \"type\": \"step\",
      \"label\": \"5.\"
    },
    {
      \"conditional\": false,
      \"condition\": \"\",
      \"id\": \"d979ecf7cd5a94577a693b02a514d606\",
      \"name\": \"function randomDateGenerator(ageMin, ageMax)\",
      \"desc\": \"<uu5string /><UU5.Bricks.Div>generates random day, month time &amp; date of an employee's birthday<s>-month-time</s></UU5.Bricks.Div><br />\",
      \"comment\": \"\",
      \"type\": \"sequence\",
      \"label\": \"6.\",
      \"statementList\": [
        {
          \"statementList\": [
            {
              \"name\": \"\",
              \"desc\": \"\",
              \"type\": \"if\",
              \"id\": \"9c3b7cb810c14489db4f6dd75980a1b8\",
              \"label\": \"6.1.A.\",
              \"condition\": \"randomMonth == 2\",
              \"statementList\": [
                {
                  \"statementList\": [
                    {
                      \"name\": \"\",
                      \"desc\": \"if true february max days = 29\",
                      \"type\": \"if\",
                      \"id\": \"380b04b181c8b452d88a3ae01b4bb56a\",
                      \"label\": \"6.1.A.1.A.\",
                      \"condition\": \"rok narodenia je delitelny 4 a 100 a 400 zaroven\"
                    },
                    {
                      \"id\": \"2d8264b53bb154ab6a67a617aad3db7d\",
                      \"name\": \"\",
                      \"desc\": \"february max days = 28\",
                      \"comment\": \"\",
                      \"type\": \"else\",
                      \"label\": \"6.1.A.1.B.\"
                    }
                  ],
                  \"id\": \"3520ec7b639074e3790f6f8cae19356e\",
                  \"name\": \"check if leap year\",
                  \"desc\": \"\",
                  \"comment\": \"\",
                  \"type\": \"selectionIf\",
                  \"label\": \"6.1.A.1.\"
                }
              ]
            }
          ],
          \"id\": \"3233408a2309740a9b7f59782642d283\",
          \"name\": \"february\",
          \"desc\": \"check if month is february\",
          \"comment\": \"\",
          \"type\": \"selectionIf\",
          \"label\": \"6.1.\"
        },
        {
          \"statementList\": [
            {
              \"name\": \"\",
              \"desc\": \"then the amount of days in a month is maximum 31\",
              \"type\": \"if\",
              \"id\": \"373b75599048e4e2b9a07b99f42c0a56\",
              \"label\": \"6.2.A.\",
              \"condition\": \"<uu5string /><UU5.Bricks.Div>if the randomMonth value is equal to 1,3,5,7,8,10 or 12</UU5.Bricks.Div><br />\"
            }
          ],
          \"id\": \"c90b22192765e40a89115406900b41d6\",
          \"name\": \"31 days in a month\",
          \"desc\": \"\",
          \"comment\": \"\",
          \"type\": \"selectionIf\",
          \"label\": \"6.2.\"
        },
        {
          \"statementList\": [
            {
              \"name\": \"\",
              \"desc\": \" then the amount of days in a month is maximum 30\",
              \"type\": \"if\",
              \"id\": \"4c54d77626a2f413ab7878992fd3cfb1\",
              \"label\": \"6.3.A.\",
              \"condition\": \"if the randomMonth value is equal to 4,6,9 or 11\"
            }
          ],
          \"id\": \"b2791eaa061f64aca899879ac9b09dac\",
          \"name\": \"30 days in a month\",
          \"desc\": \"\",
          \"comment\": \"\",
          \"type\": \"selectionIf\",
          \"label\": \"6.3.\"
        },
        {
          \"conditional\": false,
          \"condition\": \"\",
          \"id\": \"566a0665e960846d187413a24dc0201c\",
          \"name\": \"make birthdate\",
          \"desc\": \"\",
          \"comment\": \"\",
          \"type\": \"sequence\",
          \"label\": \"6.4.\",
          \"statementList\": [
            {
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"2399f99120b5f49cca07785ee5a09ac7\",
              \"name\": \"make birthdate to ISO string\",
              \"desc\": \"\",
              \"comment\": \"\",
              \"type\": \"step\",
              \"label\": \"6.4.1.\"
            },
            {
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"a8da228da7314462b8caa85dc7c33aa8\",
              \"name\": \"return birthdate\",
              \"desc\": \"\",
              \"comment\": \"\",
              \"type\": \"step\",
              \"label\": \"6.4.2.\"
            }
          ]
        }
      ]
    },
    {
      \"conditional\": true,
      \"condition\": \"<uu5string />input must be <strong><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">dtoIn</UU5.Bricks.Span></strong>\",
      \"id\": \"73ade2f3685054657b4f2520c4c9bcd4\",
      \"name\": \"function main(dtoIn)\",
      \"desc\": \"make an array, which consists of a preselected number of employees, which have an age in a predefined range, with a random workload in the range of 10-40\",
      \"comment\": \"\",
      \"type\": \"sequence\",
      \"label\": \"7.\",
      \"statementList\": [
        {
          \"conditional\": false,
          \"condition\": \"\",
          \"id\": \"6726b80574a284b70bee3f29a61b8fa5\",
          \"name\": \"declare variables from dtoIn\",
          \"desc\": \"<uu5string /><UU5.Bricks.Div><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"color\\\\\\\":\\\\\\\"#000000\\\\\\\"}\\\"><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">let peopleCount = dtoIn.count; </UU5.Bricks.Span></UU5.Bricks.Span></UU5.Bricks.Div><UU5.Bricks.Div><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"color\\\\\\\":\\\\\\\"#000000\\\\\\\"}\\\"><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">let ageMin = dtoIn.age.min; </UU5.Bricks.Span></UU5.Bricks.Span></UU5.Bricks.Div><UU5.Bricks.Div><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"color\\\\\\\":\\\\\\\"#000000\\\\\\\"}\\\"><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">let ageMax = dtoIn.age.max;</UU5.Bricks.Span></UU5.Bricks.Span></UU5.Bricks.Div>\",
          \"comment\": \"\",
          \"type\": \"step\",
          \"label\": \"7.1.\"
        },
        {
          \"conditional\": false,
          \"condition\": \"\",
          \"id\": \"e39b1be16307c4e4984bc23642d0ee12\",
          \"name\": \"const dtoOut\",
          \"desc\": \"make array\",
          \"comment\": \"\",
          \"type\": \"step\",
          \"label\": \"7.2.\"
        },
        {
          \"condition\": \"<uu5string /><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">let i = 0; i &lt; peopleCount; i++</UU5.Bricks.Span>\",
          \"id\": \"2a9155832da9e465ebd1db06939cde2e\",
          \"name\": \"\",
          \"desc\": \"iterate peopleCount times\",
          \"comment\": \"\",
          \"type\": \"iteration\",
          \"label\": \"7.3.\",
          \"statementList\": [
            {
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"509d00fc78d4d4447bc605b413a49f1b\",
              \"name\": \"object\",
              \"desc\": \"create employee object\",
              \"comment\": \"\",
              \"type\": \"step\",
              \"label\": \"7.3.1.\"
            },
            {
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"4ca93ddaab7e14269a9eeed53cb8e6b4\",
              \"name\": \"employee gender\",
              \"desc\": \"get gender from whatGender() function\",
              \"comment\": \"\",
              \"type\": \"step\",
              \"label\": \"7.3.2.\"
            },
            {
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"21faa6e5c951245ad91d56032f7dc688\",
              \"name\": \"employee birthdate\",
              \"desc\": \"get employee birthdate from randomDateGenerator;\",
              \"comment\": \"\",
              \"type\": \"step\",
              \"label\": \"7.3.3.\"
            },
            {
              \"statementList\": [
                {
                  \"name\": \"\",
                  \"desc\": \"\",
                  \"type\": \"if\",
                  \"id\": \"011fad6b03e0f4e52832c6d8e352a639\",
                  \"label\": \"7.3.4.A.\",
                  \"condition\": \"gender = male\",
                  \"statementList\": [
                    {
                      \"conditional\": false,
                      \"condition\": \"\",
                      \"id\": \"166a40ed836e74043997ac3eb4f9b425\",
                      \"name\": \"male name and surname\",
                      \"desc\": \"choose a male and female surname\",
                      \"comment\": \"\",
                      \"type\": \"step\",
                      \"label\": \"7.3.4.A.1.\"
                    }
                  ]
                },
                {
                  \"id\": \"8ec29063b5a974a52ac41ef550dfdd60\",
                  \"name\": \"\",
                  \"desc\": \"\",
                  \"comment\": \"\",
                  \"type\": \"else\",
                  \"label\": \"7.3.4.B.\",
                  \"statementList\": [
                    {
                      \"conditional\": false,
                      \"condition\": \"\",
                      \"id\": \"b34505ba99151445cb5cc153fbfa6e3e\",
                      \"name\": \"female name and surname\",
                      \"desc\": \"choose female name and surname\",
                      \"comment\": \"\",
                      \"type\": \"step\",
                      \"label\": \"7.3.4.B.1.\"
                    }
                  ]
                }
              ],
              \"id\": \"a9c6e8e847e06488898866fc21b6f8c4\",
              \"name\": \"\",
              \"desc\": \"\",
              \"comment\": \"\",
              \"type\": \"selectionIf\",
              \"label\": \"7.3.4.\"
            },
            {
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"117d3ca43ae664a17b2a97b8a20ab47b\",
              \"name\": \"employee workload\",
              \"desc\": \"random number from 1-4 multiplied by 10\",
              \"comment\": \"\",
              \"type\": \"step\",
              \"label\": \"7.3.5.\"
            },
            {
              \"conditional\": false,
              \"condition\": \"\",
              \"id\": \"987ddcbe60f7146839ff4c2d89b0a9d8\",
              \"name\": \"push employee into dtoOut\",
              \"desc\": \"<uu5string /><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">dtoOut.push(employee);</UU5.Bricks.Span>\",
              \"comment\": \"\",
              \"type\": \"step\",
              \"label\": \"7.3.6.\"
            }
          ]
        },
        {
          \"conditional\": false,
          \"condition\": \"\",
          \"id\": \"e27ec02f385ee45159f58638c75534e3\",
          \"name\": \"dtoOut\",
          \"desc\": \"<uu5string /><UU5.Bricks.Span style=\\\"<uu5json />{\\\\\\\"fontFamily\\\\\\\":\\\\\\\"Courier\\\\\\\"}\\\">return dtoOut;</UU5.Bricks.Span>\",
          \"comment\": \"\",
          \"type\": \"return\",
          \"label\": \"7.4.\"
        }
      ]
    },
    {
      \"definitions\": [
        {
          \"access\": \"ro\",
          \"name\": \"result\",
          \"defaultValue\": \"main(dtoIn)\"
        }
      ],
      \"id\": \"866b9d88b8d6f46a19b4cc4e2bbf7b2a\",
      \"name\": \"\",
      \"desc\": \"\",
      \"comment\": \"\",
      \"type\": \"variablesDefinition\",
      \"label\": \"8.\"
    },
    {
      \"conditional\": false,
      \"condition\": \"\",
      \"id\": \"5631cd97854a543298835c14835710bc\",
      \"name\": \"write employees dtoOut to console\",
      \"desc\": \"console.log(result);\",
      \"comment\": \"\",
      \"type\": \"step\",
      \"label\": \"9.\"
    }
  ],
  \"variablesCache\": {
    \"statementMap\": {},
    \"variableMap\": {},
    \"global\": {}
  },
  \"input\": [
    {
      \"access\": \"ro\",
      \"name\": \"dtoIn\",
      \"defaultValue\": \"{\\n    count: 50,\\n    age: {\\n        min: 19,\\n        max: 35\\n    }\\n}\"
    }
  ],
  \"output\": [
    {
      \"access\": \"ro\",
      \"name\": \"dtoOut\",
      \"defaultValue\": \"{\\n    gender: 'female',\\n    birthdate: '2002-05-03T03:22:00.000Z',\\n    name: 'Marcela',\\n    surname: 'Vaňková',\\n    workload: 10\\n  }\"
    }
  ],
  \"name\": \"Employee workload - úloha č.3\",
  \"desc\": \"<uu5string /><UU5.Bricks.Div>Vstupné dáta počet, rozsah veku premeníme na zoznam zamestnancov, t.j. na výstupné dáta dtoOut.</UU5.Bricks.Div><UU5.Bricks.Div>Conversion of input data, which consist of an employee count and age range, to a list of employees e.g. output data dtoOut. </UU5.Bricks.Div>\",
  \"errorPrefix\": \"\"
}"/>


